//
// Copyright 2010 Free Software Foundation, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

//
// <protocol-msg> is the top-level PDU.
// It describes the messages exchanged on the wire.
//

<integer> ::= INTEGER ;		// ASN.1 INTEGER
	      	      		// Syntax: [0-9]+

<bool>    ::= BOOLEAN ;         // ASN.1 BOOLEAN
	      	      		// Syntax: #t #f

<string>  ::= OCTET STRING ;    // ASN.1 OCTET STRING
	      	    	   	// Syntax:  "blah, blah, blah"

<basic-type> ::= <integer>
               | <bool>
               | <string>
	       ;

<expr> ::= <basic-type> 
         | <sequence>
	 ;


<sequence> ::= { <expr>* }	// ASN.1 SEQUENCE OF <expr>
	       	 	 	// Syntax: { <expr>* }
				// (zero or more <expr>'s)

<protocol-msg> ::= { <CALL> <invocation-id> <target-and-args> }	    // host -> radio
                 | { <REPLY> <invocation-id> <expr> }	      	    // radio -> host
                 | { <ERROR> <invocation-id> <error-info> }	    // radio -> host
                 | { <REJECT> <error-info> } 		  	    // radio -> host
                 | { <NOTICE> <kind> <arg> } 			    // radio -> host
		 ;

<invocation-id> ::= <integer> ;

<target-and-args> ::= <GET>  <path>
                    | <GET-META> <path>
                    | <SET> <path> <expr>
		    ;

<error-info> ::= { <error-code> <error-arg> } ;

<error-code> ::= <integer> ;

<error-arg> ::= <expr> ;


<path> ::= '/'
         | <pathx>
	 ;


<pathx> := <path-component>
         | <path-component> <pathx>

<path-component> ::= '/' <path-term>

<path-term> ::= <alpha-path-term>
	      | <numeric-path-term>
	      ;

<alpha-path-term>   ::= '[a-z][a-z-]*' ;	// regular expression
<numeric-path-term> ::= '-?0x[0-9a-f]+'  ;	// regular expression


// ----------------------------------------------------------------
// Constants

// protocol-msg constants

<CALL>      ::= 0 ;
<REPLY>	    ::= 1 ;
<ERROR>	    ::= 2 ;
<REJECT>    ::= 3 ;
<NOTICE>    ::= 4 ;

// target-and-args constants

<GET>       ::= 0;
<GET-META>  ::= 1;
<SET>       ::= 2;

