/*
 * Generated by asn1c-0.9.21 (http://lionet.info/asn1c)
 * From ASN.1 module "VRT-Control-Protocol"
 * 	found in "../../protocol/vrt-ctrl-asn1-types.asn1"
 * 	`asn1c -fskeletons-copy`
 */

#ifndef	_Expr_H_
#define	_Expr_H_


#include <vrtc/asn1c/asn_application.h>

/* Including external dependencies */
#include <vrtc/asn1c/NULL.h>
#include <vrtc/asn1c/BOOLEAN.h>
#include <vrtc/asn1c/NativeInteger.h>
#include <vrtc/asn1c/OCTET_STRING.h>
#include <vrtc/asn1c/Complex-int.h>
#include <vrtc/asn1c/IEEE-float.h>
#include <vrtc/asn1c/Complex-float.h>
#include <vrtc/asn1c/asn_SEQUENCE_OF.h>
#include <vrtc/asn1c/constr_SEQUENCE_OF.h>
#include <vrtc/asn1c/constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Expr_PR {
	Expr_PR_NOTHING,	/* No components present */
	Expr_PR_seq,
	Expr_PR_null,
	Expr_PR_boolean,
	Expr_PR_integer,
	Expr_PR_string,
	Expr_PR_complex_int,
	Expr_PR_ieee_float,
	Expr_PR_complex_float
} Expr_PR;

/* Forward declarations */
struct Expr;

/* Expr */
typedef struct Expr {
	Expr_PR present;
	union Expr_u {
		struct seq {
			A_SEQUENCE_OF(struct Expr) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} seq;
		NULL_t	 null;
		BOOLEAN_t	 boolean;
		long	 integer;
		OCTET_STRING_t	 string;
		Complex_int_t	 complex_int;
		IEEE_float_t	 ieee_float;
		Complex_float_t	 complex_float;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Expr_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Expr;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include <vrtc/asn1c/Expr.h>

#endif	/* _Expr_H_ */
